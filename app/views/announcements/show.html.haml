.row
  .col.s6.offset-s3
    .card
      .card-content.deep-purple
        .card-title.white-text
          =t(:announcement, scope: 'activerecord.models')
          =@announcement.id
      .card-content
        .section
          %h6= t(:title, scope: 'activerecord.attributes.announcement')
          = @announcement.title
        .section
          %h6= t(:description, scope: 'activerecord.attributes.announcement')
          = @announcement.description
        .section
          %h6= t(:user, scope: 'activerecord.attributes.announcement')
          = @announcement.user&.name
        .section
          %h6= t(:published, scope: 'activerecord.attributes.announcement')
          = @announcement.published
        .section
          %h6= t(:main_attachment, scope: 'activerecord.attributes.announcement')
          - if @announcement.main_attachment&.attached? == true
            %span
              =@announcement.main_attachment.filename
              %a{:href => rails_blob_path(@announcement.main_attachment, disposition: "attachment")}
                %i.material-icons file_download
              %a{:href => delete_main_attachment_announcement_path(@announcement), "rel" => "nofollow", "data-method" => "delete", "data-confirm" => t(:confirm_delete)}
                %i.material-icons delete
        .section
          %h6= t(:other_attachments, scope: 'activerecord.attributes.announcement')
          - if @announcement.other_attachments&.attached? == true
            - @announcement.other_attachments.each do |other_attachment|
              %p
                = other_attachment.filename
                %a{:href => rails_blob_path(other_attachment, disposition: "attachment")}
                  %i.material-icons file_download
                %a{:href => delete_other_attachments_announcement_path(@announcement, other_attachment.id), "rel" => "nofollow", "data-method" => "delete", "data-confirm" => t(:confirm_delete)}
                  %i.material-icons delete
      .card-action
        = link_to t(:edit), edit_announcement_path(@announcement)
        = link_to t(:back), announcements_path
