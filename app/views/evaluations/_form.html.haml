= simple_form_for @evaluation do |f|
  - if f.error_notification
    .row
      .col.s12
        .card-alert.card.gradient-45deg-red-pink
          .card-content.white-text
            %i.material-icons.prefix error
            = strip_tags(f.error_notification)
          %button.close.white-text{type: "button", data: {dismiss: 'alert'}, :area-label => 'Close'}
            %span{:area-hidden => 'true'} Ã—
  .row
    .col.s12
      .row
        .input-field.col.s12
          %i.material-icons.prefix help
          = f.input_field :application_id, data: {contrainwidth: 'false'}, collection: Application.all, label_method: :to_label, value_method: :id
          = f.label :application
          = f.full_error :application
      .row
        .input-field.col.s12
          %i.material-icons.prefix help
          = f.input_field :criterium_id, data: {contrainwidth: 'false'}, collection: Criterium.all, label_method: :name, value_method: :id
          = f.label :criterium
          = f.full_error :criterium
      .row
        .input-field.col.s12
          %i.material-icons.prefix help
          = f.input_field :evaluator
          = f.label :evaluator
          = f.full_error :evaluator
      .row
        .input-field.col.s12
          %i.material-icons.prefix help
          = f.input_field :evaluation_date
          = f.label :evaluation_date
          = f.full_error :evaluation_date
      .row
        .input-field.col.s12
          %p
            = f.label :result do
              = f.input_field :result, as: :boolean
              %span= "#{t :result, scope: 'activerecord.attributes.evaluation'}"
      .row
        .input-field.col.s12
          %i.material-icons.prefix help
          = f.input_field :description, class: 'materialize-textarea', style: 'height: 70px;'
          = f.label :description
          = f.full_error :description
  = f.button :submit, class: "btn waves-light left"
- if back_link
  = link_to t(:cancel), back_link, style: "margin-left: 2em", class: "btn white black-text waves-black waves-effect"
